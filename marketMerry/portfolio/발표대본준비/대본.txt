<스토리보드 대본>
저희 조는 온라인 식재료 판매업체인 마켓컬리를 모티브하여 프로젝트를 진행하기로 하였습니다. 
카테고리는 식품으로 하였고 여기에 맞춰 IA 시나리오와 플로우차트로 스토리보드를 작성하였습니다.

-IA 시나리오부터 설명드리겠습니다. 
홈페이지 메인 기능들로는 회원가입 / 로그인 / 고객센터 / 장바구니 / 카테고리 총 5개로 구성할 계획입니다.
회원가입 기능에는 
로그인에는
고객센터에는
장바구니에는
카테고리에는
구성되어있습니다.

-다음으로 플로우차트를 설명드리겠습니다.
기능별 메뉴트리 구조 아래 플로우차트를 넣어서 작성을 한 화면입니다.
저희는 로그인 인증이 필요한 부분과 필요하지 않은 부분을 색으로 명시해서 표현해두었습니다.

-먼저 회원가입 흐름을 보겠습니다.
회원가입을 시작하면 서버에서 회원유무의 여부를 확인하여 신규회원이면 회원가입 단계가 계속 진행되고
기존회원이라면 로그인 화면으로 넘어가게 됩니다.
신규회원의 경우 약관 보기 폼이 뜨게 되고 필수 약관 동의를 체크했는지 여부를 서버에서(?) 확인하여 단계 진행이 됩니다.
체크가 안되었다면 동의 체크를 해달라는 알림창이 뜨게 됩니다. 완료가 되었다면 회원 정보를 입력하는 화면이 출력되고
입력된 정보를 서버에서 데이터 유효성 체크를 통해 회원가입 성공 또는 회원정보 재입력 과정을 거칩니다.
최종적으로 회원가입에 성공하면 회원의 정보는 DB에 저장이 되고
자동 로그인이 되어 신규혜택 100원 상품 보러가기 버튼과 마이페이지 버튼으로 이동할 수 있습니다.  

-로그인 화면에서는 아이디 입력, 비밀번호 입력을 통해서 서버에 정보를 전달하고 
서버는 회원DB에서 입력된 정보와 일치하는 값을 찾아 일치한다면 로그인하여 홈 화면으로 전환해주고
일치하는 정보가 없다면 회원가입 화면으로 전환을 시켜줍니다.

-다음으로 설명드릴 장바구니 기능에서는
상품페이지에서 담았던 상품들을 선택하여 주문하기를 누르면 배송지 정보를 입력하게 되고
쿠폰/적립금 선택한 다음 결제수단을 선택해서 약관동의를  거치면 주문요청이 되고 서버에서 약관동의 여부를 판단하고 주문이 완료됩니다.
완료된 주문은 마이페이지에서 확인이 가능하게 전송됩니다.

-카테고리 메뉴는 클릭을 하게 되면 서브카테고리로 식품별 리스트가 열리고 
원하는 리스트를 한번 더 클릭하면 해당 상품별 상세페이지가 뜨게 됩니다.

해당 상품 이미지를 클릭해서 들어가면 찜하기 아이콘, 장바구니 버튼, 옵션/수량선택, 공유하기 버튼이 화면에 표시에 되어있습니다.
찜하기 아이콘을 클릭하면 찜목록 페이지에 저장이 되고 장바구니로 옮길 수도 있습니다. 그리고 두번 클릭을 하게되면 해제가 됩니다.
공유하기 아이콘을 통해 URL을 복사 또는 트위터와 페이스북 계정을 연동하여 해당 상품의 정보를 공유할  수 있습니다.

-고객센터에는 게시판 형태의 공지사항과 1:1문의하기가 있습니다.
공지사항에는 공지글 게시판과 상세공지로 홈페이지에 관련된 공지글을 등록해서 업데이트할 수 있게 되어있고
1:1문의는 로그인을 통해 문의글을 등록할 수 있는 화면이 뜨도록 설정되어있습니다.

이상으로 저희 조의 스토리보드 발표를 마치겠습니다.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
저희가 마켓컬리를 분석하면서 기능적으로 아쉬웠던 부분으로 상품후기작성란입니다.
그래서 추가구현하고자 하는 기능으로는 별점 평가 기능과 후기 검색어 선택기능입니다.
현재 마켓컬리 페이지 내 후기 등록란에는 상품 후기 작성 시 단순히 내용만 입력되어 있어 
상품에 대한 평가를 찾아보기 어렵기 때문에
검색어 기능과 별점 등록 기능을 추가하여 맛, 품질, 포장상태, 신선도 등 평가기준별로 별점을 입력 할 수 있도록하여
후기 상세 페이지로 들어가지 않고도 상품 후기 목록에서 바로 확인할 수 있도록 함으로써 사용자의 번거로움을 줄일 수 있게 하는 것이 목적입니다.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------








-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
지금 우리는 사용자/클라이언트입장에서만 이해를 하면서 IA시나리오를 그리는 것 같다.
개발자/서버 입장에서도 같이 생각해봐야한다.
겟보더,  보더, 보더리스트뷰리저브, 타임리프, 톰켓       ====>  비로소 사용자가 보는 글목록보기 
